package interview;

public class HashCode {

	public static void main(String[] args) {
		String s="gsk";
		System.out.println(s.hashCode());//102655
	}
}
/*
--For every object a unique num generated by JVM which is nothing but hashCode 
--hashCode want represents address of objects.JVM will use hc while saving objects into 
	hashing related data structures like hashtable,hashmap,hashset,etc..
--the main adv of saving objects based on hashcode is Search Operation will become easy()
	the most powerful search algorithm up today is hashing
--If ur giving the chance to object class hashCode()it will generate hashcode based on 
	address of the object if does'nt mean hashcode represent address of the object
--Based on our requirement we can override hashcode() in our class to generate our own hashcode
--overriding hashcode method is said to be proper if and only if for every object we have to 
	generate a unique number as hashcode
class Student {
public int hashCode(){
return 100;
}
this is improper way of overriding hashcode() because for all students objects we are generating 
	same no as hashcode
	class Student{
	public int hashCode(){
	return rollno;
this is proper way of overriding hashcode() because we are generating a different hashCode for 	
	every object
	------------------------toString vs HashCode------------------------
--If ur giving the chance to object class toString() it wil internally cals hashcode methods
--If your overriding toString() then our toString() may not call hashcode() 
*/